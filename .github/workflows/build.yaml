name: Build and Publish on Windows and Ubuntu

on:
  push:
    branches:
      - main  # Triggers the workflow on push events to the main branch.

jobs:
  build-and-publish:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Cache Python packages
        uses: actions/cache@v2
        with:
          path: ~\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install system dependencies
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt-get update
            sudo apt-get install -y bluez python3-pip
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            choco install python --version=3.9
          fi

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            python -m pip install -r requirements.txt
          fi

      - name: Install the package
        run: |
          python setup.py install

      - name: Build wxPython application
        run: |
          python -m pip install wxPython
          python your_application_script.py

      - name: Publish the Bluetooth package
        run: |
          python -m pip install setuptools wheel twine
          python setup.py sdist bdist_wheel
          twine upload dist/*

      - name: Check for errors
        if: failure()
        run: |
          echo "An error occurred. Please review the logs to identify the problem."
        continue-on-error: true  # This allows the workflow to continue even if this step 'fails'

      - name: Finalize workflow
        run: |
          echo "Workflow ${GITHUB_WORKFLOW} on commit ${GITHUB_SHA} completed with status ${GITHUB_JOB_STATUS}."
        env:
          GITHUB_JOB_STATUS: ${{ job.status }}